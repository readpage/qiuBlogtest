/**
 * @param data
 * @returns
 *
 * 适用于任何数组和对象的深拷贝
 * const arr = [1, 2, 3, { a: "b" }, [{ c: "d" }]];
 * const cloneArr = cloneDeep(arr);
 *
 * cloneArr[3].a = "u";
 * cloneArr[4][0].c = "uu";
 *
 * console.log(arr); // [1, 2, 3, { a: "b" }, [{ c: "d" }]]
 * console.log(cloneArr); // [1, 2, 3, { a: "u" }, [{ c: "uu" }]]
 */
export declare function cloneDeep(data: any): any;
export declare function deepTree(list: any[], children?: string): any[];
export declare function revDeepTree(list?: Array<any>, children?: string): any[];
/**
 *
 * @param arr
 * @param depth
 * @returns
 *
 * 无穷数(Infinity)
 * 将array递归为一维数组。
 * const array = [1,2,[1,2]];
 * console.log(array.flattenDeep(Infinity));  // [1,2,1,2]
 */
export declare const flattenDeep: (arr: any[], depth?: number) => any[];
